:root {
  --b1: #eee;
  --b2: #fff;
  --b3: #ccc;
  --border: #ccc;
  --t1: #666;
  --t2: #888;
  --t3: #000;
  --red: #f00;
  --green: #0f0;
}

body {
  margin: 0;
  background: var(--b1);
  font-family: "Calibri", sans-serif;
}

* {
  box-sizing: border-box;
}

.hidden {
  display: none !important;
}

#root {
  min-height: 100vh;
  width: 100vw;
  overflow-y: hidden;
}

.centered {
  display: flex;
  min-height: 100vh;
  align-items: center;
  justify-content: center;
}

.menu {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: -moz-fit-content;
  width: fit-content;
  min-width: 26vw;
  box-shadow: 0 0 2rem 0.5rem var(--t1);
}

header {
  width: 100%;
  text-align: center;
  padding: 1rem;
  font-size: 2rem;
  background: var(--b3);
  display: flex;
  justify-content: flex-start;
  column-gap: 1rem;
  align-items: center;
}

header a {
  text-decoration: none;
  color: var(--t3);
  border-right: 1px solid var(--b2);
  padding-right: 1rem;
}

.tag {
  background: var(--b2);
  padding: 1rem;
  width: 100%;
  color: var(--t1);
  text-decoration: none;
}

.tag:not(:last-child) {
  border-bottom: 1px solid var(--border);
}

.tag:hover,
.tag:focus {
  background: var(--b1);
}

.tag-name {
  font-size: 2rem;
}

.tag-description {
  color: var(--t3);
}

.tag-description-long {
  color: var(--t2);
  padding-top: 0.5rem;
}

.content {
  width: 80vw;
  margin: 0 6vw;
  height: 92vh;
  background: var(--b2);
  display: flex;
  flex-direction: column;
}

.container {
  padding: 2rem;
  overflow-y: scroll;
}

.parameters {
  display: grid;
  grid-template-columns: minmax(auto, 70%) 1fr;
  grid-auto-rows: auto;
  row-gap: 1rem;
}

.parameters h2 {
  font-size: 2rem;
  margin-bottom: 0;
}

.parameter {
  display: contents;
}

.parameter > * {
  border-bottom: 1px solid var(--t1);
  padding-bottom: 1rem;
}

.parameter-example {
  display: flex;
  flex-direction: column;
  row-gap: 1rem;
  padding-left: 1rem;
}

.parameter-example select,
.parameter-example input[type="text"] {
  width: 100%;
  padding: 0.3rem;
}

.execute-button {
  margin-top: 2rem;
  border: none;
  padding: 1rem;
  width: 100%;
  font-size: 1rem;
  background: var(--b1);
  cursor: pointer;
}

.execute-button:hover {
  background: var(--b3);
}

.parameter-required {
  color: var(--red);
}

.checkbox-with-indicator input:checked ~ span::before {
  content: "True";
  color: var(--green);
}

.checkbox-with-indicator input:not(:checked) ~ span::before {
  content: "False";
  color: var(--red);
}

.request-url {
  margin-top: 2rem;
  background: var(--b1);
  padding: 1rem;
  display: flex;
  column-gap: 1rem;
}

.request-url input {
  background: none;
  border: none;
  outline: none;
  flex: 1;
}

#response {
  min-height: 10rem;
  padding-bottom: 3rem;
}

.loading::before {
  content: "Loading...";
  background: repeating-linear-gradient(to right, var(--b2) 0%, var(--b3) 50%, var(--b2) 100%);
  width: 100%;
  background-size: 200% auto;
  background-position: 0 100%;
  animation: gradient 2s infinite;
  animation-fill-mode: forwards;
  animation-timing-function: linear;
  display: block;
  text-align: center;
  color: var(--t3);
  padding: 0.5rem 0;
}

@keyframes gradient {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: -200% 0;
  }
}

.loading > * {
  display: none;
}

.collapsed {
  cursor: pointer;
}

.collapsed .value::after {
  content: "{...}";
}

.collapsed:hover > .value::after {
  color: var(--t1);
}

.collapsed > .value > * {
  display: none !important;
}

.error-iframe {
  height: 500px;
  width: 100%;
}

.list-of-fields {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-auto-rows: auto;
  row-gap: 1rem;
}

.list-of-values > .field:not(:last-child) > * {
  border-bottom: 1px solid var(--b3);
  padding-bottom: 1rem;
}

.response-content .field {
  display: contents;
}

.response-content .label {
  line-height: 2rem;
  padding-right: 1rem;
}

.response-content .string,
.response-content .text {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid var(--b3);
  border-radius: 3px;
}

.response-content .text {
  resize: vertical;
}

.response-content .value {
  display: flex;
  align-items: center;
}

.response-content .value > * {
  flex: 1;
}

.dictionary-label {
  cursor: pointer;
}

.dictionary-label::after {
  content: "\25BC";
  padding-left: 0.5rem;
}

.collapsed > .dictionary-label::after {
  content: "\25BA";
}

.dictionary-label:hover::after {
  color: var(--t1);
}

.error-message {
  background: var(--red);
  padding: 1rem;
  margin-bottom: 1rem;
}